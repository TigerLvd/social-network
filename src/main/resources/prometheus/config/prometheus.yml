# my global config
global:
  scrape_interval:     120s # By default, scrape targets every 15 seconds. [Определяет как часто Prometheus будет опрашивать (scrape) цели для сбора метрик]
  evaluation_interval: 120s # By default, scrape targets every 15 seconds. [Задает частоту, с которой Prometheus будет оценивать правила и генерировать оповещения.]
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels: #[Эти метки будут добавлены к любым временным рядам или оповещениям при взаимодействии с внешними системами]
    monitor: 'my-project'

alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - 'alertmanager:9093'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files: #Этот раздел обычно содержит список файлов с правилами, которые Prometheus будет загружать и оценивать
# - "alert.rules"
# - "first.rules"
# - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs: #Здесь определяется, какие источники Prometheus будет опрашивать для получения метрик
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 120s

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090','cadvisor:8080','node-exporter:9100', 'nginx-exporter:9113']
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: [ 'postgres-exporter:9187' ]
  - job_name: 'spring-boot-app'
    metrics_path: '/actuator/prometheus'  # Задаём путь для метрик
    static_configs:
      - targets: ['app:8080']